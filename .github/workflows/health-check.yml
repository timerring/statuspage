name: Scheduled Health Check

# Controls when the action will run.
on:
  schedule:
    - cron: "*/2 * * * *"  # 每隔2分钟执行一次

jobs:
  health_check_job:
    runs-on: ubuntu-latest
    name: Check all sites
    permissions:
      contents: write  # 明确授予写入权限
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以确保可以正确合并
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用自动提供的token

      - name: Create timestamp file
        run: |
          # 创建时间戳目录（如果不存在）
          mkdir -p timestamps
          
          # 获取当前时间并格式化为文件名友好的格式
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          FILENAME="timestamps/timestamp_$TIMESTAMP.txt"
          
          # 创建文件并写入内容
          echo "File created at: $(date)" > "$FILENAME"
          echo "Runner ID: $GITHUB_RUN_ID" >> "$FILENAME"
          echo "Runner number: $GITHUB_RUN_NUMBER" >> "$FILENAME"
          
          # 显示创建的文件
          echo "Created file: $FILENAME"
          cat "$FILENAME"
        
      - name: Check for changes
        id: git_status
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push changes
        if: steps.git_status.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Health check update: $(date)"
          git push